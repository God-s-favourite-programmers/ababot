name: Publish Docker image latest

on:
  push:
    branches: [master]

jobs:
  validate:
    name: Validate project
    runs-on: ubuntu-latest
    environment: publishing
    defaults:
      run:
        working-directory: ./ababot
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with: "./ababot -> target"
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Validate
        run: cargo check

  test:
    name: Test project
    runs-on: ubuntu-latest
    environment: publishing
    needs: [validate]
    defaults:
      run:
        working-directory: ./ababot
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with: "./ababot -> target"
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Test
        run: cargo test

  build:
    name: Build project
    runs-on: ubuntu-latest
    environment: publishing
    needs: [test, validate]
    defaults:
      run:
        working-directory: ./ababot
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with: "./ababot -> target"
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Test
        run: cargo build

  push:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    environment: publishing
    strategy:
      matrix:
        target: [arm/v7, amd64]
    steps:
      - name: Write long target
        run: echo TARGET_LONG=armv7-unknown-linux-musleabihf >> $GITHUB_ENV && echo TAG=arm >> $GITHUB_ENV
        if: ${{ matrix.target == 'arm/v7' }}
      - name: Write long target
        run: echo TARGET_LONG=x86_64-unknown-linux-musl >> $GITHUB_ENV && echo TAG=amd >> $GITHUB_ENV
        if: ${{ matrix.target == 'amd64' }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with: "./ababot -> target"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install cross
        run: cargo install cross
      - name: Compile
        run: cross build --release --target ${{ env.TARGET_LONG }}
      - name: Move
        run: mv target/${{ env.TARGET_LONG }}/release/ababot ./ababot

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/${{ matrix.target }}
          push: true
          tags: areskiko/ababot:${{ env.TAG }}
